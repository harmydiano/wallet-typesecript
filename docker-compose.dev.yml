version: '3.8'

networks:
  sms-network:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: sms_api_dev
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=sms_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm run dev
    networks:
      - sms-network

  postgres:
    image: postgres:15-alpine
    container_name: sms_postgres
    environment:
      POSTGRES_DB: sms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sms-network

  redis:
    image: redis:7-alpine
    container_name: sms_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sms-network

volumes:
  postgres_data:
  redis_data: 